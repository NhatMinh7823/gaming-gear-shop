const { StructuredTool } = require("@langchain/core/tools");
const { z } = require("zod");
const Product = require("../../models/productModel");
const { formatPrice } = require("../config/utils");

class ProductDetailsTool extends StructuredTool {
  schema = z.object({
    productId: z.string().describe("ID c·ªßa s·∫£n ph·∫©m"),
  });

  name = "product_details";
  description = "L·∫•y th√¥ng tin chi ti·∫øt c·ªßa m·ªôt s·∫£n ph·∫©m b·∫±ng ID";

  async _call(input) {
    try {
      const product = await Product.findById(input.productId).populate(
        "category",
        "name"
      );

      if (!product) {
        return "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi ID n√†y.";
      }

      const priceFormatted = formatPrice(product.price);
      const discountPriceFormatted = product.discountPrice
        ? formatPrice(product.discountPrice)
        : null;
      const stockStatus =
        product.stock > 0
          ? `‚úÖ C√≤n h√†ng (${product.stock} s·∫£n ph·∫©m)`
          : "‚ùå H·∫øt h√†ng";

      let details = `üéÆ **${product.name}**\n\n`;
      details += `üìù **M√¥ t·∫£:** ${product.description || "Kh√¥ng c√≥ m√¥ t·∫£"}\n\n`;
      details += `üí∞ **Gi√°:** ${priceFormatted} VND\n`;

      if (discountPriceFormatted) {
        details += `üè∑Ô∏è **Gi√° khuy·∫øn m√£i:** ${discountPriceFormatted} VND\n`;
      }

      details += `üìÅ **Danh m·ª•c:** ${product.category?.name || "N/A"}\n`;
      details += `üè∑Ô∏è **Th∆∞∆°ng hi·ªáu:** ${product.brand || "N/A"}\n`;
      details += `üì¶ **T√¨nh tr·∫°ng:** ${stockStatus}\n`;
      details += `üåü **ƒê√°nh gi√°:** ${product.averageRating || 0}/5 (${
        product.numReviews || 0
      } l∆∞·ª£t)\n`;
      details += `‚öôÔ∏è **Th√¥ng s·ªë:** ${Object.entries(
        product.specifications || {}
      )
        .map(([k, v]) => `${k}: ${v}`)
        .join(", ")}\n`;
      details += `‚ú® **T√≠nh nƒÉng:** ${product.features?.join(", ") || "N/A"}\n`;

      if (product.images?.[0]?.url) {
        details += `üñºÔ∏è **H√¨nh ·∫£nh:** ${product.images[0].url}\n`;
      }

      return details;
    } catch (error) {
      console.error("Error in product details tool:", error);
      return "‚ùå L·ªói khi l·∫•y th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m.";
    }
  }
}

module.exports = ProductDetailsTool;
